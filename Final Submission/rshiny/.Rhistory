rm(list=ls())
setwd("/homework1")
library(ggplot2)
library(grid)
library(gridExtra)
mydata <- read.csv(file="Tour_de_France.csv")
p1 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
p2 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(0, 12)) +
labs(x="Fatigue", y="Disruptions")
p3 = ggplot(data = mydata,
mapping = aes(x=Crashes, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(10,14), ylim=c(0, 12)) +
labs(x="Crashes", y="Disruptions")
# grid.arrange(p1, p2, p3, nrow = 1)
p4 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes, colour=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
#grid.arrange(p4)
source("ParetoSorting.R")
input <- matrix(c(mydata$Fatigue,mydata$Crashes))
result <- ParetoSorting_adv(input,"MIN")
table(result)
(1:2306)[result==0]
rm(list=ls())
setwd("/homework1")
library(ggplot2)
library(grid)
library(gridExtra)
mydata <- read.csv(file="Tour_de_France.csv")
p1 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
p2 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(0, 12)) +
labs(x="Fatigue", y="Disruptions")
p3 = ggplot(data = mydata,
mapping = aes(x=Crashes, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(10,14), ylim=c(0, 12)) +
labs(x="Crashes", y="Disruptions")
# grid.arrange(p1, p2, p3, nrow = 1)
p4 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes, colour=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
#grid.arrange(p4)
source("ParetoSorting.R")
input <- matrix(c(mydata$Fatigue,mydata$Crashes))
result <- ParetoSorting_adv(input,"MIN")
table(result)
(1:2306)[result==0]
rm(list=ls())
setwd("/homework1")
library(ggplot2)
library(grid)
library(gridExtra)
mydata <- read.csv(file="Tour_de_France.csv")
p1 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
p2 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(0, 12)) +
labs(x="Fatigue", y="Disruptions")
p3 = ggplot(data = mydata,
mapping = aes(x=Crashes, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(10,14), ylim=c(0, 12)) +
labs(x="Crashes", y="Disruptions")
# grid.arrange(p1, p2, p3, nrow = 1)
p4 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes, colour=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
#grid.arrange(p4)
source("ParetoSorting.R")
input <- matrix(c(mydata$Fatigue,mydata$Crashes))
result <- ParetoSorting_adv(input,"MIN")
table(result)
(1:2306)[result==0]
rm(list=ls())
setwd("/homework1")
library(ggplot2)
library(grid)
library(gridExtra)
mydata <- read.csv(file="Tour_de_France.csv")
p1 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
p2 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(0, 12)) +
labs(x="Fatigue", y="Disruptions")
p3 = ggplot(data = mydata,
mapping = aes(x=Crashes, y=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(10,14), ylim=c(0, 12)) +
labs(x="Crashes", y="Disruptions")
# grid.arrange(p1, p2, p3, nrow = 1)
p4 = ggplot(data = mydata,
mapping = aes(x=Fatigue, y=Crashes, colour=Disruptions)) +
geom_point(size=1) +
coord_cartesian(xlim=c(0,20), ylim=c(10, 14)) +
labs(x="Fatigue", y="Crashes")
grid.arrange(p4)
source("ParetoSorting.R")
input <- matrix(c(mydata$Fatigue,mydata$Crashes))
result <- ParetoSorting_adv(input,"MIN")
table(result)
(1:2306)[result==0]
install.packages("shiny")
shiny::runApp('~/Desktop/3A/40.014 ESA/Project/Official/ESAProject2020Team06/rshiny')
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
runApp()
